{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pujan\\\\Downloads\\\\chatbot-ap\\\\chatbot-app\\\\client\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n  const handleSend = async () => {\n    if (!message) return;\n    const userEntry = {\n      sender: \"user\",\n      text: message\n    };\n    setChatLog(prev => [...prev, userEntry]);\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await res.json();\n      const botEntry = {\n        sender: \"bot\",\n        text: data.response || data.error\n      };\n      setChatLog(prev => [...prev, botEntry]);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: \"auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat with Gemini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        minHeight: 300\n      },\n      children: chatLog.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"5px 0\",\n          textAlign: entry.sender === \"user\" ? \"right\" : \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [entry.sender === \"user\" ? \"You\" : \"Gemini\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" \", entry.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && handleSend(),\n      style: {\n        width: \"80%\",\n        padding: 10,\n        marginTop: 10\n      },\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      style: {\n        padding: 10,\n        marginLeft: 10\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"9e8BSymJHM0wPaIj0xd2okSfldw=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","chatLog","setChatLog","handleSend","userEntry","sender","text","prev","res","fetch","method","headers","body","JSON","stringify","data","json","botEntry","response","error","console","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","minHeight","map","entry","index","textAlign","value","onChange","e","target","onKeyDown","key","width","marginTop","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/pujan/Downloads/chatbot-ap/chatbot-app/client/src/components/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Chat = () => {\n  const [message, setMessage] = useState(\"\");\n  const [chatLog, setChatLog] = useState([]);\n\n  const handleSend = async () => {\n    if (!message) return;\n\n    const userEntry = { sender: \"user\", text: message };\n    setChatLog((prev) => [...prev, userEntry]);\n\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message }),\n      });\n      const data = await res.json();\n\n      const botEntry = { sender: \"bot\", text: data.response || data.error };\n      setChatLog((prev) => [...prev, botEntry]);\n      setMessage(\"\");\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: \"auto\", padding: 20 }}>\n      <h2>Chat with Gemini</h2>\n      <div style={{ border: \"1px solid #ccc\", padding: 10, minHeight: 300 }}>\n        {chatLog.map((entry, index) => (\n          <div key={index} style={{ margin: \"5px 0\", textAlign: entry.sender === \"user\" ? \"right\" : \"left\" }}>\n            <strong>{entry.sender === \"user\" ? \"You\" : \"Gemini\"}:</strong> {entry.text}\n          </div>\n        ))}\n      </div>\n      <input\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\n        style={{ width: \"80%\", padding: 10, marginTop: 10 }}\n        placeholder=\"Type your message...\"\n      />\n      <button onClick={handleSend} style={{ padding: 10, marginLeft: 10 }}>Send</button>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}